---
- name: Validate prerequisites
  block:
    - name: Check if cluster variable is defined
      ansible.builtin.fail:
        msg: "Cluster variable is not defined for host {{ inventory_hostname }}"
      when: not cluster is defined

    - name: Validate proxy configuration
      ansible.builtin.set_fact:
        zabbix_proxy_info: "{{ zabbix_proxy_mapping[cluster] | default({}) }}"
      failed_when: not zabbix_proxy_info

- name: Check Zabbix agent installation
  block:
    - name: Detect installed Zabbix agent version
      ansible.builtin.shell: |
        if rpm -q zabbix-agent >/dev/null 2>&1; then
          if rpm -q zabbix-agent2 >/dev/null 2>&1; then
            echo "both"
          else
            echo "zabbix-agent"
          fi
        elif rpm -q zabbix-agent2 >/dev/null 2>&1; then
          echo "zabbix-agent2"
        else
          echo "none"
        fi
      register: zabbix_agent_package
      changed_when: false

    - name: Validate agent installation
      ansible.builtin.fail:
        msg: "{{ error_message }}"
      vars:
        error_message: >-
          {% if zabbix_agent_package.stdout == 'both' %}
          Both zabbix-agent and zabbix-agent2 are installed
          {% elif zabbix_agent_package.stdout == 'none' %}
          No Zabbix agent is installed
          {% endif %}
      when: zabbix_agent_package.stdout in ['both', 'none']

- name: Configure Zabbix agent
  block:
    - name: Set agent configuration
      ansible.builtin.set_fact:
        zabbix_config_file: "/etc/zabbix/{{ 'zabbix_agentd.conf' if zabbix_agent_package.stdout == 'zabbix-agent' else 'zabbix_agent2.conf' }}"

    - name: Update agent configuration
      ansible.builtin.lineinfile:
        path: "{{ zabbix_config_file }}"
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
        state: present
      loop:
        - key: Server
          value: "{{ zabbix_proxy_info.ip }}"
        - key: ServerActive
          value: "{{ zabbix_proxy_info.ip }}"
        - key: Hostname
          value: "{{ ansible_hostname }}"
      notify: Restart Zabbix agent

    - name: Ensure agent service is running
      ansible.builtin.service:
        name: "{{ zabbix_agent_package.stdout }}"
        state: started
        enabled: true

- name: Register host with Zabbix server
  block:
    - name: Set host group name
      ansible.builtin.set_fact:
        formatted_group_name: "tw-{{ cluster | lower | regex_replace('^([a-z]{3}).*', '\\1') }}-bsh-systems-vm"

    - name: Add host to Zabbix
      community.zabbix.zabbix_host:
        host_name: "{{ inventory_hostname }}"
        visible_name: "{{ inventory_hostname }}"
        description: "Added by Ansible on {{ ansible_date_time.date }}"
        host_groups:
          - "{{ formatted_group_name }}"
        link_templates:
          - "Template OS Linux"
        status: enabled
        state: present
        force: false
        inventory_mode: automatic
        monitored_by: proxy
        proxy: "{{ zabbix_proxy_info.name }}"
        interfaces:
          - type: agent
            main: 1
            useip: 1
            ip: "{{ ansible_default_ipv4.address }}"
            dns: ""
            port: "{{ zabbix_agent_port }}"
      vars:
        ansible_network_os: community.zabbix.zabbix
        ansible_connection: httpapi
        ansible_httpapi_use_ssl: true
        ansible_httpapi_validate_certs: false
        ansible_zabbix_auth_key: "{{ zabbix_api_key }}"
        ansible_zabbix_url_path: ''
      delegate_to: "{{ zabbix_server }}"

- name: Ensure handlers are run
  ansible.builtin.meta: flush_handlers